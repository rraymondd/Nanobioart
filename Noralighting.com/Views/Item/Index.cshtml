@using PagedList
@using PagedList.Mvc
@model IPagedList<Noralighting.com.Models.Product>

@{
    ViewBag.Title = "Index";
}

<style>
    .ui-autocomplete {
        max-height: 200px;
        overflow-y: auto;
        overflow-x: hidden;
    }
</style>
<!-- Page Content -->

<div class="container" id = "content">
    <div class="row">
        <div class="col-lg-3">
            </div>
            <div class="col-lg-6">
            </div>
            <div class="col-lg-3">
                @using (Html.BeginForm())
{
    <p>
        @Html.TextBox("tags")
        <input type="submit" value="Search" />
    </p>
}
            </div>
        </div>
    <div class="row">
    <div class="col-lg-6" >
    <div class="table-responsive">
        <table class="table table-striped table-bordered"  id="items">
            <thead>
                <tr>
                    <th>ItemCode</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.ActionLink(item.ItemCode, "Details", "CRUD", new { id = item.ItemCode }, null)
                        </td>
                    </tr>
                }
                
                   
            </tbody>
        </table>
    </div>
            </div>
        </div>
    <div class="row">
    <div class="pagedList">
        
            <div class="col-lg-12">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.ClassicPlusFirstAndLast)
            </div>
        
        </div>
        </div>
 </div>
@section Scripts
{
    <script type="text/javascript">
    $(document).ready(function () {
        $("#tags").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Item/TagSearch",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.ItemCode, value :item.ItemCode};
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>

}
